package com.talaash.entity;

import java.util.ArrayList;
import java.util.List;

public class FingerExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    public FingerExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFingerIdIsNull() {
            addCriterion("finger_id is null");
            return (Criteria) this;
        }

        public Criteria andFingerIdIsNotNull() {
            addCriterion("finger_id is not null");
            return (Criteria) this;
        }

        public Criteria andFingerIdEqualTo(Integer value) {
            addCriterion("finger_id =", value, "fingerId");
            return (Criteria) this;
        }

        public Criteria andFingerIdNotEqualTo(Integer value) {
            addCriterion("finger_id <>", value, "fingerId");
            return (Criteria) this;
        }

        public Criteria andFingerIdGreaterThan(Integer value) {
            addCriterion("finger_id >", value, "fingerId");
            return (Criteria) this;
        }

        public Criteria andFingerIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("finger_id >=", value, "fingerId");
            return (Criteria) this;
        }

        public Criteria andFingerIdLessThan(Integer value) {
            addCriterion("finger_id <", value, "fingerId");
            return (Criteria) this;
        }

        public Criteria andFingerIdLessThanOrEqualTo(Integer value) {
            addCriterion("finger_id <=", value, "fingerId");
            return (Criteria) this;
        }

        public Criteria andFingerIdIn(List<Integer> values) {
            addCriterion("finger_id in", values, "fingerId");
            return (Criteria) this;
        }

        public Criteria andFingerIdNotIn(List<Integer> values) {
            addCriterion("finger_id not in", values, "fingerId");
            return (Criteria) this;
        }

        public Criteria andFingerIdBetween(Integer value1, Integer value2) {
            addCriterion("finger_id between", value1, value2, "fingerId");
            return (Criteria) this;
        }

        public Criteria andFingerIdNotBetween(Integer value1, Integer value2) {
            addCriterion("finger_id not between", value1, value2, "fingerId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andFamilyIdIsNull() {
            addCriterion("family_id is null");
            return (Criteria) this;
        }

        public Criteria andFamilyIdIsNotNull() {
            addCriterion("family_id is not null");
            return (Criteria) this;
        }

        public Criteria andFamilyIdEqualTo(Integer value) {
            addCriterion("family_id =", value, "familyId");
            return (Criteria) this;
        }

        public Criteria andFamilyIdNotEqualTo(Integer value) {
            addCriterion("family_id <>", value, "familyId");
            return (Criteria) this;
        }

        public Criteria andFamilyIdGreaterThan(Integer value) {
            addCriterion("family_id >", value, "familyId");
            return (Criteria) this;
        }

        public Criteria andFamilyIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("family_id >=", value, "familyId");
            return (Criteria) this;
        }

        public Criteria andFamilyIdLessThan(Integer value) {
            addCriterion("family_id <", value, "familyId");
            return (Criteria) this;
        }

        public Criteria andFamilyIdLessThanOrEqualTo(Integer value) {
            addCriterion("family_id <=", value, "familyId");
            return (Criteria) this;
        }

        public Criteria andFamilyIdIn(List<Integer> values) {
            addCriterion("family_id in", values, "familyId");
            return (Criteria) this;
        }

        public Criteria andFamilyIdNotIn(List<Integer> values) {
            addCriterion("family_id not in", values, "familyId");
            return (Criteria) this;
        }

        public Criteria andFamilyIdBetween(Integer value1, Integer value2) {
            addCriterion("family_id between", value1, value2, "familyId");
            return (Criteria) this;
        }

        public Criteria andFamilyIdNotBetween(Integer value1, Integer value2) {
            addCriterion("family_id not between", value1, value2, "familyId");
            return (Criteria) this;
        }

        public Criteria andFingerNameIsNull() {
            addCriterion("finger_name is null");
            return (Criteria) this;
        }

        public Criteria andFingerNameIsNotNull() {
            addCriterion("finger_name is not null");
            return (Criteria) this;
        }

        public Criteria andFingerNameEqualTo(String value) {
            addCriterion("finger_name =", value, "fingerName");
            return (Criteria) this;
        }

        public Criteria andFingerNameNotEqualTo(String value) {
            addCriterion("finger_name <>", value, "fingerName");
            return (Criteria) this;
        }

        public Criteria andFingerNameGreaterThan(String value) {
            addCriterion("finger_name >", value, "fingerName");
            return (Criteria) this;
        }

        public Criteria andFingerNameGreaterThanOrEqualTo(String value) {
            addCriterion("finger_name >=", value, "fingerName");
            return (Criteria) this;
        }

        public Criteria andFingerNameLessThan(String value) {
            addCriterion("finger_name <", value, "fingerName");
            return (Criteria) this;
        }

        public Criteria andFingerNameLessThanOrEqualTo(String value) {
            addCriterion("finger_name <=", value, "fingerName");
            return (Criteria) this;
        }

        public Criteria andFingerNameLike(String value) {
            addCriterion("finger_name like", value, "fingerName");
            return (Criteria) this;
        }

        public Criteria andFingerNameNotLike(String value) {
            addCriterion("finger_name not like", value, "fingerName");
            return (Criteria) this;
        }

        public Criteria andFingerNameIn(List<String> values) {
            addCriterion("finger_name in", values, "fingerName");
            return (Criteria) this;
        }

        public Criteria andFingerNameNotIn(List<String> values) {
            addCriterion("finger_name not in", values, "fingerName");
            return (Criteria) this;
        }

        public Criteria andFingerNameBetween(String value1, String value2) {
            addCriterion("finger_name between", value1, value2, "fingerName");
            return (Criteria) this;
        }

        public Criteria andFingerNameNotBetween(String value1, String value2) {
            addCriterion("finger_name not between", value1, value2, "fingerName");
            return (Criteria) this;
        }

        public Criteria andFingerPicIsNull() {
            addCriterion("finger_pic is null");
            return (Criteria) this;
        }

        public Criteria andFingerPicIsNotNull() {
            addCriterion("finger_pic is not null");
            return (Criteria) this;
        }

        public Criteria andFingerPicEqualTo(String value) {
            addCriterion("finger_pic =", value, "fingerPic");
            return (Criteria) this;
        }

        public Criteria andFingerPicNotEqualTo(String value) {
            addCriterion("finger_pic <>", value, "fingerPic");
            return (Criteria) this;
        }

        public Criteria andFingerPicGreaterThan(String value) {
            addCriterion("finger_pic >", value, "fingerPic");
            return (Criteria) this;
        }

        public Criteria andFingerPicGreaterThanOrEqualTo(String value) {
            addCriterion("finger_pic >=", value, "fingerPic");
            return (Criteria) this;
        }

        public Criteria andFingerPicLessThan(String value) {
            addCriterion("finger_pic <", value, "fingerPic");
            return (Criteria) this;
        }

        public Criteria andFingerPicLessThanOrEqualTo(String value) {
            addCriterion("finger_pic <=", value, "fingerPic");
            return (Criteria) this;
        }

        public Criteria andFingerPicLike(String value) {
            addCriterion("finger_pic like", value, "fingerPic");
            return (Criteria) this;
        }

        public Criteria andFingerPicNotLike(String value) {
            addCriterion("finger_pic not like", value, "fingerPic");
            return (Criteria) this;
        }

        public Criteria andFingerPicIn(List<String> values) {
            addCriterion("finger_pic in", values, "fingerPic");
            return (Criteria) this;
        }

        public Criteria andFingerPicNotIn(List<String> values) {
            addCriterion("finger_pic not in", values, "fingerPic");
            return (Criteria) this;
        }

        public Criteria andFingerPicBetween(String value1, String value2) {
            addCriterion("finger_pic between", value1, value2, "fingerPic");
            return (Criteria) this;
        }

        public Criteria andFingerPicNotBetween(String value1, String value2) {
            addCriterion("finger_pic not between", value1, value2, "fingerPic");
            return (Criteria) this;
        }

        public Criteria andFingerCodeIsNull() {
            addCriterion("finger_code is null");
            return (Criteria) this;
        }

        public Criteria andFingerCodeIsNotNull() {
            addCriterion("finger_code is not null");
            return (Criteria) this;
        }

        public Criteria andFingerCodeEqualTo(String value) {
            addCriterion("finger_code =", value, "fingerCode");
            return (Criteria) this;
        }

        public Criteria andFingerCodeNotEqualTo(String value) {
            addCriterion("finger_code <>", value, "fingerCode");
            return (Criteria) this;
        }

        public Criteria andFingerCodeGreaterThan(String value) {
            addCriterion("finger_code >", value, "fingerCode");
            return (Criteria) this;
        }

        public Criteria andFingerCodeGreaterThanOrEqualTo(String value) {
            addCriterion("finger_code >=", value, "fingerCode");
            return (Criteria) this;
        }

        public Criteria andFingerCodeLessThan(String value) {
            addCriterion("finger_code <", value, "fingerCode");
            return (Criteria) this;
        }

        public Criteria andFingerCodeLessThanOrEqualTo(String value) {
            addCriterion("finger_code <=", value, "fingerCode");
            return (Criteria) this;
        }

        public Criteria andFingerCodeLike(String value) {
            addCriterion("finger_code like", value, "fingerCode");
            return (Criteria) this;
        }

        public Criteria andFingerCodeNotLike(String value) {
            addCriterion("finger_code not like", value, "fingerCode");
            return (Criteria) this;
        }

        public Criteria andFingerCodeIn(List<String> values) {
            addCriterion("finger_code in", values, "fingerCode");
            return (Criteria) this;
        }

        public Criteria andFingerCodeNotIn(List<String> values) {
            addCriterion("finger_code not in", values, "fingerCode");
            return (Criteria) this;
        }

        public Criteria andFingerCodeBetween(String value1, String value2) {
            addCriterion("finger_code between", value1, value2, "fingerCode");
            return (Criteria) this;
        }

        public Criteria andFingerCodeNotBetween(String value1, String value2) {
            addCriterion("finger_code not between", value1, value2, "fingerCode");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mj_finger
     *
     * @mbg.generated do_not_delete_during_merge Thu Mar 26 16:58:15 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mj_finger
     *
     * @mbg.generated Thu Mar 26 16:58:15 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}